import sqlite3
import os
import logging
import struct

#-------------------------------------------------------------------------------
#   Creating a logging with timestamp and regex 
#-------------------------------------------------------------------------------

logging_str = "[%(asctime)s: %(levelname)s: %(module)s]: %(message)s"
log_dir = "logs"
os.makedirs(log_dir, exist_ok=True)
logging.basicConfig(filename=os.path.join(log_dir, 'db_operation_logs.log'), level=logging.INFO, format=logging_str, filemode="a")



def create_database(database_name: str):
    """
    Creates a new SQLite database with the given name and a table called "input_output"
    to store input and output data.

    Parameters:
    - database_name (str): The name of the database to create.

    Returns:
    - None
    """
    # Create a connection object
    conn = sqlite3.connect(database_name)
    logging.info("sql server successfully connected")
    # Create a cursor object to execute SQL queries
    cursor = conn.cursor()

    # Create a table to store input and output data
    cursor.execute('''CREATE TABLE IF NOT EXISTS predictions
                    (id INTEGER PRIMARY KEY AUTOINCREMENT,
                    visit REAL,
                    mr_delay REAL,
                    Age REAL,
                    EDUC REAL,
                    SES REAL,
                    CDR REAL,
                    eTIV REAL,
                    nWBV REAL,
                    gender REAL,
                    ASF REAL,
                    MMSE REAL,
                    prediction REAL)''')

    # Commit the changes and close the connection
    conn.commit()
    logging.info("sql table successfully created")
    conn.close()

def save_to_database(database_name: str, visit, mr_delay, Age, EDUC, SES, CDR, eTIV, nWBV, gender, ASF, MMSE, prediction: float):
    """
    Save input variables and output to a SQLite database.

    Parameters:
    visit (float): Visit number.
    mr_delay (float): Delay between visits.
    Age (float): Age of subject.
    EDUC (float): Years of education of subject.
    SES (float): Socioeconomic status of subject.
    CDR (float): Clinical dementia rating.
    eTIV (float): Estimated total intracranial volume.
    nWBV (float): Normalized whole brain volume.
    gender (float): Gender of subject (0 = Female, 1 = Male).
    ASF (float): Atlas scaling factor.
    MMSE (float): Mini-mental state examination score.
    prediction (float): Prediction generated by model.

    Returns:
    None
    """
    # Open a connection to the database
    conn = sqlite3.connect(database_name)
    c = conn.cursor()

    # Insert a new row into the table with the input variables and prediction
    c.execute('''INSERT INTO predictions (visit, mr_delay, Age, EDUC, SES, CDR, eTIV, nWBV, gender, ASF, MMSE, prediction)
                 VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)''',
                 (visit, mr_delay, Age, EDUC, SES, CDR, eTIV, nWBV, gender, ASF, MMSE, prediction))

    # Commit the changes and close the connection
    logging.info("new data from web-app successfully inserted to db")
    conn.commit()
    conn.close()
